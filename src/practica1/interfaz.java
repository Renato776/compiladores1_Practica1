/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica1;

import java.awt.BorderLayout;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.ScrollPane;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JFileChooser;
import java.io.*;
import java.util.LinkedList;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author renato
 */
public class interfaz extends javax.swing.JFrame {

    public static String guardar = null;

    /**
     * Creates new form interfaz
     */
    public interfaz() {
        initComponents();
    }

    public static void log(String s, interfaz i) {
        String old = i.console.getText() + "\n";
        i.console.setText(old + s);
    }

    public void waitUntilExists(String f) {
        File file = new File(f);
        while (!file.exists()) {
            try {
                Thread.sleep(1000);
            } catch (Exception exceptionEx) {

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jFrame4 = new javax.swing.JFrame();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        arboles = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        siguientes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        automatas = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        transiciones = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Abrir", "Guardar", "Guardar Como", "Generar XML", "nuevo"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Archivo");

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jLabel2.setText("Archivo de Entrada");

        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Salida");

        console.setColumns(20);
        console.setRows(5);
        jScrollPane3.setViewportView(console);

        jLabel4.setText("Arboles");

        arboles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        arboles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbolesActionPerformed(evt);
            }
        });

        jLabel5.setText("Tabla de siguientes");

        siguientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        siguientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguientesActionPerformed(evt);
            }
        });

        jLabel6.setText("Automatas");

        automatas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        automatas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automatasActionPerformed(evt);
            }
        });

        jLabel7.setText("Tabla de transciones");

        transiciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        transiciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transicionesActionPerformed(evt);
            }
        });

        jButton2.setText("Evaluar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jButton1)
                        .addGap(78, 78, 78)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(automatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transiciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(siguientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(arboles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5)
                                .addGap(12, 12, 12)
                                .addComponent(siguientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(arboles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transiciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(automatas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        //System.out.println(jComboBox1.getSelectedIndex());
        //"Abrir", "Guardar", "Guardar Como", "Generar XML" 
        switch (jComboBox1.getSelectedIndex()) {
            case 0://Abrir
                final JFileChooser fc = new JFileChooser();
                fc.addChoosableFileFilter(new OpenFileFilter("der", "archivos punto der"));
                int returnVal = fc.showOpenDialog(null);

                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File fileName = fc.getSelectedFile();

                    String line = null;

                    try {
                        String content = "";
                        // FileReader reads text files in the default encoding.
                        FileReader fileReader
                                = new FileReader(fileName);

                        // Always wrap FileReader in BufferedReader.
                        BufferedReader bufferedReader
                                = new BufferedReader(fileReader);

                        while ((line = bufferedReader.readLine()) != null) {
                            content = content + line + "\n";
                        }
                        texto.setText(content);
                        // Always close files.
                        bufferedReader.close();
                    } catch (FileNotFoundException ex) {
                        System.out.println(
                                "Unable to open file '"
                                + fileName + "'");
                    } catch (IOException ex) {
                        System.out.println(
                                "Error reading file '"
                                + fileName + "'");
                        // Or we could just do this: 
                        // ex.printStackTrace();
                    }

                } else {
                    // System.out.println("Open command cancelled by user." + "\n");
                }
                break;
            case 1: //Guardar
                if (guardar == null) {
                    JFileChooser chooser = new JFileChooser();
                    chooser.setCurrentDirectory(new File("/home/renato/Desktop"));
                    int retrival = chooser.showSaveDialog(null);
                    if (retrival == JFileChooser.APPROVE_OPTION) {
                        guardar = chooser.getSelectedFile() + ".der";
                    }
                    try {
                        BufferedWriter writer = new BufferedWriter(new FileWriter(new File(guardar), true));
                        //FileWriter fw = new FileWriter(guardar);
                        writer.write(texto.getText());
                        writer.close();
                        //console.setText(console.getText()+"\n"+"intentando imprimir: "+texto.getText());
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    Practica1.log("Archivo guardado con exito.");
                } else {
                    try {
                        BufferedWriter writer = new BufferedWriter(new FileWriter(new File(guardar), true));
                        //FileWriter fw = new FileWriter(guardar);
                        writer.write(texto.getText());
                        writer.close();
                        Practica1.log("Archivo guardado con exito.");

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                break;
            case 2: //Guardar Como
                JFileChooser chooser = new JFileChooser();
                chooser.setCurrentDirectory(new File("/home/renato/Desktop"));
                int retrival = chooser.showSaveDialog(null);
                if (retrival == JFileChooser.APPROVE_OPTION) {
                    guardar = chooser.getSelectedFile() + ".der";
                }
                try {
                    BufferedWriter writer = new BufferedWriter(new FileWriter(new File(guardar), true));
                    //FileWriter fw = new FileWriter(guardar);
                    writer.write(texto.getText());
                    writer.close();
                    Practica1.log("Archivo guardado con exito.");
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                break;
            case 3: //Generar XML
                break;
            case 4: //nuevo
                texto.setText("");
                guardar = null;
                break;
            default:
                Practica1.log("Error fatal!");
                break;
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    public void evaluateBloque(String es) throws Exception {
        String[] parrafos = es.split("%%");

        for (String content : parrafos) {
            if (Practica1.isDeclarationBlock(content)) {
                scanner lexico = new scanner(new BufferedReader(new StringReader(content)));
                parser sin = new parser(lexico);
                try {
                    sin.parse();
                } catch (Exception eret) {
                    Practica1.log(eret.getMessage());
                }
            } else {
                // evaluar();
            }

        }
        for (Tree rTree : Practica1.arboles) {
            System.out.println("Arbol lleno: " + rTree.name);
            try {
                rTree.llenarHojas(rTree.root);
            } catch (Exception except) {
                Practica1.log(except.getMessage());
            }
            rTree.generarSiguientes();
            rTree.llenar(rTree.root);
            rTree.print();
            rTree.getSiguientes();
            rTree.getTablaTransiciones();
            rTree.printAutomata();
        }
    }

    public void evaluar() {
        String raw = this.texto.getText();
        Practica1.bloques = new LinkedList();
        subParser.scanner.evaluate(raw);
        for (String yay : Practica1.bloques) {
            //System.out.println(yay);
            try {
                evaluar(yay);
            } catch (Exception ex1) {
                Practica1.log(ex1.getMessage());
            }
        }
       // Practica1.removeDupes(Practica1.arboles);
       // Practica1.showGroups();
    }

    public void evaluar(String s) {
        for(String es: s.split("%%")){
         if (!Practica1.isDeclarationBlock(es)) {
            evaluacion.scanner.evaluate(es);
            String resultado = "<Salida>";
            for (Evaluacion eval : Practica1.evaluaciones) {
                boolean result = eval.evaluate();
                if (result) {
                    Practica1.log("La cadena: \"" + eval.contenido + "\" es una cadena valida para la expresion: "+eval.expresion);
                resultado = resultado +"<Expresion>"+"\n"+"<Valor>"+eval.contenido.split("\"")[1]+"</Valor>"+"\n";
                resultado = resultado +"<ER>"+eval.expresion+"</ER>"+"\n";
                resultado = resultado +"<Resultado>"+"Cadena Valida"+"</Resultado>"+"\n";
                resultado = resultado + "</Expresion>"+"\n";
                } else {
                    Practica1.log("La cadena: \"" + eval.contenido + "\" NO una cadena valida para la expresion: "+eval.expresion);
                resultado = resultado +"<Expresion>"+"\n"+"<Valor>"+eval.contenido.split("\"")[1]+"</Valor>"+"\n";
                resultado = resultado +"<ER>"+eval.expresion+"</ER>"+"\n";
                resultado = resultado +"<Resultado>"+"Cadena NO Valida"+"</Resultado>"+"\n";
                resultado = resultado + "</Expresion>"+"\n";
                }
            }
            resultado = resultado+"</Salida>";
        try {
                        BufferedWriter writer = new BufferedWriter(new FileWriter(new File(Practica1.path+"XML_Output"+Practica1.xmlCounter+".xml"), true));
                        //FileWriter fw = new FileWriter(guardar);
                        writer.write(resultado);
                        writer.close();
                        //console.setText(console.getText()+"\n"+"intentando imprimir: "+texto.getText());
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
        
        Practica1.xmlCounter++;
        // String reportName = transiciones.getItemAt(transiciones.getSelectedIndex());
                    this.waitUntilExists(Practica1.path + "XML_Output"+Practica1.xmlCounter+".xml");

        File htmlFile = new File(Practica1.path + "XML_Output"+Practica1.xmlCounter+".xml");
        try {
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (Exception excp) {
            Practica1.log("Ocurrio un error al mostrar el reporte: " + excp.getMessage());
        }
         }
        }
       
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Practica1.bloques = new LinkedList();
        Practica1.conjuntos = new LinkedList();
        Practica1.evaluaciones = new LinkedList();
        String raw = this.texto.getText();
        subParser.scanner.evaluate(raw);
        for (String yay : Practica1.bloques) {
            //System.out.println(yay);
            try {
                evaluateBloque(yay);
            } catch (Exception ex1) {
                Practica1.log(ex1.getMessage());
            }
        }
        Practica1.removeDupes(Practica1.arboles);
        Practica1.showGroups();
        // i.arboles.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"arbol.jpg", "arbol2.jpg"}));
        String[] trees = new String[Practica1.arboles.size()];
        String[] follows = new String[Practica1.arboles.size()];
        String[] transitions = new String[Practica1.arboles.size()];
        String[] afds = new String[Practica1.arboles.size()];
        String arbolEnding = "_arbol.svg";
        int c = 0;
        for (Tree arbol : Practica1.arboles) {
            trees[c] = arbol.name + arbolEnding;
            follows[c] = arbol.name + "_siguientes.html";
            transitions[c] = arbol.name + "_transiciones.html";
            afds[c] = arbol.name + "_automata.svg";
            File tempFile = new File(Practica1.path + trees[c]);
            Practica1.generarPNG(tempFile);
            tempFile = new File(Practica1.path + afds[c]);
            Practica1.generarPNG(tempFile);
            c++;
        }
        this.arboles.setModel(new javax.swing.DefaultComboBoxModel(trees));
        this.siguientes.setModel(new javax.swing.DefaultComboBoxModel(follows));
        this.transiciones.setModel(new javax.swing.DefaultComboBoxModel(transitions));
        this.automatas.setModel(new javax.swing.DefaultComboBoxModel(afds));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void arbolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbolesActionPerformed
        // TODO add your handling code here:
        String imageName = arboles.getItemAt(arboles.getSelectedIndex());
        File imageFile = new File(Practica1.path + imageName);
        this.showImage(imageFile);
    }//GEN-LAST:event_arbolesActionPerformed

    private void automatasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automatasActionPerformed
        // TODO add your handling code here:
        String imageName = automatas.getItemAt(automatas.getSelectedIndex());
        File imageFile = new File(Practica1.path + imageName);
        this.showImage(imageFile);
    }//GEN-LAST:event_automatasActionPerformed

    private void siguientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguientesActionPerformed
        // TODO add your handling code here:
        String reportName = siguientes.getItemAt(siguientes.getSelectedIndex());
        File htmlFile = new File(Practica1.path + reportName);
        try {
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (Exception excp) {
            Practica1.log("Ocurrio un error al mostrar el reporte: " + excp.getMessage());
        }
    }//GEN-LAST:event_siguientesActionPerformed

    private void transicionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transicionesActionPerformed
        // TODO add your handling code here:
        String reportName = transiciones.getItemAt(transiciones.getSelectedIndex());
        File htmlFile = new File(Practica1.path + reportName);
        try {
            Desktop.getDesktop().browse(htmlFile.toURI());
        } catch (Exception excp) {
            Practica1.log("Ocurrio un error al mostrar el reporte: " + excp.getMessage());
        }
    }//GEN-LAST:event_transicionesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        evaluar();
        Practica1.evaluaciones= new LinkedList();
    }//GEN-LAST:event_jButton2ActionPerformed
    public void showImage(File imageFile) {
        try {
//Practica1.generatePNG(imageFile);
            this.waitUntilExists(imageFile.getAbsolutePath() + ".png");
            BufferedImage image = ImageIO.read(new File(imageFile.getAbsolutePath() + ".png"));
            JLabel myNewLabel = new JLabel(new javax.swing.ImageIcon(image));
            //gallery.setIcon(new javax.swing.ImageIcon (image));
            // System.out.println("Intentando mostrar imagen: " + myNewLabel.toString());

            JFrame frame = new JFrame();

            JScrollPane scrollableTextArea = new JScrollPane(myNewLabel);
            scrollableTextArea.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
            scrollableTextArea.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
            scrollableTextArea.setSize(700, 700);
            frame.getContentPane().add(scrollableTextArea, BorderLayout.CENTER);
            frame.setSize(800, 800);
            frame.setVisible(true);

        } catch (Exception e) {
            Practica1.log("Ocurrio un error al mostrar imagen: " + e.getMessage());
        }
    }

    /**
     * @param args the command line argument
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                interfaz i = new interfaz();
                i.setVisible(true);
                // i.arboles.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"arbol.jpg", "arbol2.jpg"}));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> arboles;
    private javax.swing.JComboBox<String> automatas;
    private javax.swing.JTextArea console;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> siguientes;
    private javax.swing.JTextArea texto;
    private javax.swing.JComboBox<String> transiciones;
    // End of variables declaration//GEN-END:variables
}
